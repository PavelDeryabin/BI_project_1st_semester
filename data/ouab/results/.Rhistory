hlines = 2,
add_rug = TRUE,
title = "MA plot of DEGs Senescent v Young at the 8 day of differentiation",
ylim = c(-6, 6)
)
plotMA(res1.shr2, FDR = 0.05,
intgenes = c("IL1RL1"),
annotation_obj = annotation_res1.shr2,
hlines = 2,
add_rug = TRUE,
title = "MA plot of DEGs Senescent v Young at the 8 day of differentiation",
ylim = c(-6, 6)
)
genenames_res1.shr2 <- mapIds(org.Hs.eg.db,keys = substr(rownames(res1.shr2), 1, 15) ,column = "SYMBOL",keytype="ENSEMBL")
annotation_res1.shr2 <- data.frame(gene_id = rownames(res1.shr2),
gene_name = genenames_res1.shr2,
row.names = rownames(res1.shr2),
stringsAsFactors = FALSE)
head(annotation_res1.shr2)
plotMA(res1.shr, FDR = 0.05,
intgenes = c("IL1RL1"),
annotation_obj = annotation_res1.shr2,
hlines = 2,
add_rug = TRUE,
title = "MA plot of DEGs Senescent v Young at the 8 day of differentiation",
ylim = c(-6, 6)
)
plotMA(res1.shr, FDR = 0.05,
intgenes = c("IL1RL1"),
annotation_obj = annotation_res1.shr2$gene_name,
hlines = 2,
add_rug = TRUE,
title = "MA plot of DEGs Senescent v Young at the 8 day of differentiation",
ylim = c(-6, 6)
)
plotMA(res1.shr, FDR = 0.05,
intgenes = c("IL1RL1"),
annotation_obj = annotation_res1.shr2$gene_id,
hlines = 2,
add_rug = TRUE,
title = "MA plot of DEGs Senescent v Young at the 8 day of differentiation",
ylim = c(-6, 6)
)
nrow(dds1)
rowRanges(gse)
View(gse@assays$counts)
gse@assays$counts
gse@assays
head(gse@assays)
head(gse@assays@data)
head(gse@assays$counts)
head(dds1@assays$counts)
head(dds1@assays)
View(dds1)
dds1@rowRanges@elementMetadata@listData[["SYMBOL"]][["ENSG00000002016"]]
dds1@rowRanges@elementMetadata@listData[["SYMBOL"]][["ENSG00000197635"]]
plotCounts(dds1, gene = dds1@rowRanges@elementMetadata@listData[["SYMBOL"]][["ENSG00000197635"]], intgroup = c("Cells", "DayD"),
returnData = T) %>%
ggplot(aes(x=Status, y=log2(count))) +
geom_point(aes(fill=Cells), pch=21, size=2) +
facet_wrap(~Cells) +
expand_limits(y=0)
library(ggplot2)
library((dplyr))
library(dplyr)
plotCounts(dds1, gene = dds1@rowRanges@elementMetadata@listData[["SYMBOL"]][["ENSG00000197635"]], intgroup = c("Cells", "DayD"),
returnData = T) %>%
ggplot(aes(x=Status, y=log2(count))) +
geom_point(aes(fill=Cells), pch=21, size=2) +
facet_wrap(~Cells) +
expand_limits(y=0)
design(dds) <- ~ DayD + Cells + DayD:Cells # Design with interactions, a.i. difference of differentiation in difference of cells' nature
dds <- DESeq(dds)
resultsNames(dds)
res2 <- results(dds, contrast=list(c("Cells_SEN_vs_CTR"))) # DEGs at day 0 in sen vs y
res2
mcols(res1, use.names = TRUE)
mcols(res2, use.names = TRUE)
summary(res2)
sum(!is.na(res2$pvalue))
sum(res2$pvalue < 0.05, na.rm=TRUE)
sum(res2$padj < 0.1, na.rm=TRUE)
res2Sig <- subset(res2, padj < 0.1) # subset of the BH significant (FDR=0.1)
head(res2Sig[ order(res1Sig$log2FoldChange), ]) # most down-reg
head(res2Sig[ order(res2Sig$log2FoldChange), ]) # most down-reg
res2.noshr <- results(dds, contrast=list(c("Cells_SEN_vs_CTR")))
plotMA(res2.noshr, ylim = c(-5, 5))
library("ashr")
res2.shr <- lfcShrink(dds, contrast=list(c("Cells_SEN_vs_CTR")), res=res2, type="ashr")
plotMA(res2.shr, ylim = c(-5, 5))
hist(res2Sig$pvalue[res2Sig$baseMean > 1], breaks = 0:20/20,
col = "grey50", border = "white")
library("AnnotationDbi")
library("org.Hs.eg.db")
library("GenomicFeatures")
ens.str <- substr(rownames(res2Sig), 1, 15)
res2Sig$symbol <- mapIds(org.Hs.eg.db,
keys=ens.str,
column="SYMBOL",
keytype="ENSEMBL",
multiVals="first")
res2Sig$entrez <- mapIds(org.Hs.eg.db,
keys=ens.str,
column="ENTREZID",
keytype="ENSEMBL",
multiVals="first")
write.csv(as.data.frame(res2Sig),
file="DEGs sen vs y.csv")
plotDispEsts( dds, ylim = c(1e-6, 1e2))
load("~/mks/ouab_theme/step_2_salmon/ouab3.RData")
rm(all,gene_list,original_gene_list)
all <- as.data.frame(res_ouab_shs)
# we want the log2 fold change
original_gene_list <- all$log2FoldChange
# name the vector
names(original_gene_list) <- all$entrez
# omit any NA values
gene_list<-na.omit(original_gene_list)
anyDuplicated(names(gene_list))
gene_list <- gene_list[!duplicated(names(gene_list))]
# sort the list in decreasing order (required for clusterProfiler)
gene_list = sort(gene_list, decreasing = TRUE)
library(ReactomePA)
library(DOSE)
library(topGO)
library(Rmisc)
library(xlsx)
library(ggplot2)
library(dplyr)
library(clusterProfiler)
library(org.Hs.eg.db)
react <- gsePathway(geneList = gene_list,
organism = 'human',
nPerm = 10000,
minGSSize = 3,
maxGSSize = 500,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "DOSE")
View(summary(react))
reactr <- setReadable(react, OrgDb = org.Hs.eg.db, keyType="ENTREZID")
View(summary(reactr))
# MSigDB
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("msigdbr")
library(msigdbr)
msigdbr_show_species()
m_t2g <- msigdbr(species = "Homo sapiens", category = "C6") %>%
dplyr::select(gs_name, entrez_gene)
head(m_t2g)
msigdbc6 <- GSEA(geneList = gene_list,
TERM2GENE = m_t2g,
nPerm = 10000,
minGSSize = 3,
maxGSSize = 500,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "DOSE")
View(summary(msigdbc6))
load("~/mks/ouab_theme/step_2_salmon/ouab.RData")
setwd("~/mks/ouab_theme/step_2_salmon") # setting wd with the folder "quants" and predesigned "coldata.csv" file
library(Rmisc)
library(xlsx)
library(ggplot2)
library(dplyr)
library(org.Hs.eg.db)
library(AnnotationDbi)
library(DESeq2)
DESeq2::plotPCA(rld, intgroup = c("CellType", "Cells"))
DESeq2::plotPCA(rld_sen, intgroup = c("CellType", "Cells"))
plotMA(res_ouab, ylim = c(-10, 10)) # look at all genes
plotMA(res_ouab_sh, ylim = c(-10, 10))
library("AnnotationDbi")
library("org.Hs.eg.db")
library("GenomicFeatures")
View(as.data.frame(res_ouab_shs)) # look manually for interesting genes
plotCounts(dds, gene="ENSG00000157445.15", intgroup=c("CellType","Cells"))
setwd("~/mks/ouab_theme/step_2_salmon/results for ouab")
library(clusterProfiler)
library(org.Hs.eg.db)
dotplot(gseGOBP, showCategory=30, split=".sign") + facet_grid(.~.sign)
dotplot(gseGOBPs, showCategory=30, split=".sign") + facet_grid(.~.sign)
View(summary(gseGOBP))
View(summary(gseGOBPs))
gseGOBPs2 <- simplify(gseGOBP,
cutoff = 0.8,
by = "p.adjust",
select_fun = min,
measure = "Wang",
semData = NULL)
View(summary(gseGOBPs2))
gseGOBPs2 <- simplify(gseGOBP,
cutoff = 0.6,
by = "p.adjust",
select_fun = min,
measure = "Wang",
semData = NULL)
View(summary(gseGOBPs2))
dotplot(gseGOBPs2, showCategory=30, split=".sign") + facet_grid(.~.sign)
# results export
gseGOBPs_df <- gseGOBPs@result
View(gseGOBPs_df)
str(gseGOBPs)
gseGOBPs_df<- arrange(gseGOBPs_df,p.adjus)
str(gseGOBPs)
str(gseGOBPs_df)
gseGOBPs_df<- arrange(gseGOBPs_df,p.adjust)
write.xlsx(gseGOBPs_df,"gseGOBPs.xlsx")
emapplot(gseGOBPs)
cnetplot(gseGOBPs, #categorySize="pvalue",
foldChange=gene_list)
cnetplot(gse, foldChange=gene_list, circular = TRUE, colorEdge = TRUE)
cnetplot(gseGOBPs, foldChange=gene_list, circular = TRUE, colorEdge = TRUE)
ridgeplot(gseGOBPs)
heatplot(gseGOBPs, foldChange=gene_list)
plotGOgraph(gseGOBPs)
gseaplot(gseGOBPs, geneSetID = "GO:0043065")
gseaplot(gseGOBPs, geneSetID = "GO:0043065", title = gseGOBPs$Description [ID = "GO:0043065"])
gseaplot(gseGOBPs, geneSetID = "GO:1904064", title = gseGOBPs$Description[ID = "GO:1904064"])
gseaplot(gseGOBPs, geneSetID = "GO:1904064", title = gseGOBPs_df$Description[ID = "GO:1904064"])
gseGOBP <- gseGO(geneList=gene_list,
OrgDb = org.Hs.eg.db,
ont ="BP",
keyType = "SYMBOL",
nPerm = 1000,
minGSSize = 3,
maxGSSize = 1000,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "DOSE")
View(summary(gseGOBP))
gseGOBP <- gseGO(geneList=gene_list,
OrgDb = org.Hs.eg.db,
ont ="BP",
keyType = "SYMBOL",
nPerm = 1000,
minGSSize = 2,
maxGSSize = 1500,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "fgsea")
View(summary(gseGOBP))
gseGOBP <- gseGO(geneList=gene_list,
OrgDb = org.Hs.eg.db,
ont ="BP",
keyType = "SYMBOL",
nPerm = 10000,
minGSSize = 2,
maxGSSize = 1500,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "fgsea")
View(summary(gseGOBP))
gseGOBP <- gseGO(geneList=gene_list,
OrgDb = org.Hs.eg.db,
ont ="BP",
keyType = "SYMBOL",
nPerm = 20000,
minGSSize = 2,
maxGSSize = 1500,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "fgsea")
View(summary(gseGOBP))
gseGOBP <- gseGO(geneList=gene_list,
OrgDb = org.Hs.eg.db,
ont ="BP",
keyType = "SYMBOL",
nPerm = 10000,
minGSSize = 3,
maxGSSize = 1000,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "fgsea")
View(summary(gseGOBP))
gseGOBPs <- simplify(gseGOBP,
cutoff = 0.7,
by = "p.adjust",
select_fun = min,
measure = "Wang",
semData = NULL)
View(summary(gseGOBPs2))
# results export
gseGOBPs_df <- gseGOBP@result
gseGOBPs_df<- arrange(gseGOBPs_df,p.adjust)
write.xlsx(gseGOBPs_df,"gseGOBP.xlsx")
# GO CC
gseGOCC <- gseGO(geneList=gene_list,
OrgDb = org.Hs.eg.db,
ont ="CC",
keyType = "SYMBOL",
nPerm = 10000,
minGSSize = 3,
maxGSSize = 1000,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "fgsea")
View(summary(gseGOCC))
dotplot(gseGOCC, showCategory=30, split=".sign") + facet_grid(.~.sign)
# results export
gseGOCC_df <- gseGOCC@result
write.xlsx(gseGOCC_df,"gseGOCC.xlsx")
# GO MF
gseGOMF <- gseGO(geneList=gene_list,
OrgDb = org.Hs.eg.db,
ont ="MF",
keyType = "SYMBOL",
nPerm = 10000,
minGSSize = 3,
maxGSSize = 1000,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "fgsea")
dotplot(gseGOMF, showCategory=30, split=".sign") + facet_grid(.~.sign)
# results export
gseGOMF_df <- gseGOMF@result
gseGOMF_df<- arrange(gseGOMF_df,pvalue)
write.xlsx(gseGOMF_df,"gseGOMF.xlsx")
emapplot(gseGOMF)
rm(all,gene_list,original_gene_list)
all <- as.data.frame(res_ouab_shs)
# we want the log2 fold change
original_gene_list <- all$log2FoldChange
# name the vector
names(original_gene_list) <- all$entrez
# omit any NA values
gene_list<-na.omit(original_gene_list)
anyDuplicated(names(gene_list))
gene_list <- gene_list[!duplicated(names(gene_list))]
# sort the list in decreasing order (required for clusterProfiler)
gene_list = sort(gene_list, decreasing = TRUE)
kk2 <- gseKEGG(geneList     = gene_list,
organism     = 'hsa',
nPerm = 10000,
minGSSize = 3,
maxGSSize = 1000,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "fgsea")
View(summary(kk2))
kk2r <- setReadable(kk2, OrgDb = org.Hs.eg.db, keyType="ENTREZID")
# results export
kk2r_df <- kk2r@result
kk2r_df<- arrange(kk2r_df,pvalue)
write.xlsx(kk2r_df,"KEGG.xlsx")
mkk2 <- gseMKEGG(geneList = gene_list,
organism = 'hsa',
nPerm = 10000,
minGSSize = 3,
maxGSSize = 1000,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "fgsea")
View(summary(mkk2))
mkk2r <- setReadable(mkk2, OrgDb = org.Hs.eg.db, keyType="ENTREZID")
mkk2r_df<- arrange(mkk2r_df,pvalue)
write.xlsx(mkk2r_df,"MKEGG.xlsx")
# results export
mkk2r_df <- mkk2r@result
mkk2r_df<- arrange(mkk2r_df,pvalue)
write.xlsx(mkk2r_df,"MKEGG.xlsx")
library(ReactomePA)
react <- gsePathway(geneList = gene_list,
organism = 'human',
nPerm = 10000,
minGSSize = 3,
maxGSSize = 1000,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "fgsea")
View(summary(react))
reactr <- setReadable(react, OrgDb = org.Hs.eg.db, keyType="ENTREZID")
# results export
reactr_df <- reactr@result
reactr_df<- arrange(reactr_df,pvalue)
write.xlsx(reactr_df,"Reactome.xlsx")
wpgmtfile <- system.file("extdata/wikipathways-20200810-gmt-Homo_sapiens.gmt", package="clusterProfiler")
wp2gene <- read.gmt(wpgmtfile)
wp2gene <- wp2gene %>% tidyr::separate(ont, c("name","version","wpid","org"), "%")
wpid2gene <- wp2gene %>% dplyr::select(wpid, gene) #TERM2GENE
wpid2name <- wp2gene %>% dplyr::select(wpid, name) #TERM2NAME
gseWP <- GSEA(gene_list,
TERM2GENE = wpid2gene,
TERM2NAME = wpid2name,
nPerm = 10000,
minGSSize = 3,
maxGSSize = 1000,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "fgsea")
head(gseWP)
gseWP <- setReadable(gseWP, OrgDb = org.Hs.eg.db, keyType="ENTREZID")
View(summary(gseWP))
# results export
gseWP_df <- gseWP@result
gseWP_df<- arrange(gseWP_df,pvalue)
write.xlsx(gseWP_df,"WikiPathways.xlsx")
library(msigdbr)
msigdbr_show_species()
m_df <- msigdbr(species = "Homo sapiens")
head(m_df, 2) %>% as.data.frame
msigdb <- GSEA(geneList = gene_list,
TERM2GENE = m_t2g,
nPerm = 10000,
minGSSize = 3,
maxGSSize = 1000,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "fgsea")
m_df <- msigdbr(species = "Homo sapiens")%>%
dplyr::select(gs_name, entrez_gene)
head(m_df)
msigdb <- GSEA(geneList = gene_list,
TERM2GENE = m_df,
nPerm = 10000,
minGSSize = 3,
maxGSSize = 1000,
verbose = TRUE,
pAdjustMethod = "BH",
pvalueCutoff = 1,
by = "fgsea")
View(summary(msigdb))
msigdbc6r <- setReadable(msigdbc6, OrgDb = org.Hs.eg.db, keyType="ENTREZID")
msigdbr <- setReadable(msigdb, OrgDb = org.Hs.eg.db, keyType="ENTREZID")
msigdbr_df<- arrange(msigdbr_df,pvalue)
# results export
msigdbr_df <- msigdbr@result
msigdbr_df<- arrange(msigdbr_df,pvalue)
write.xlsx(msigdbr_df,"MSigBP.xlsx")
View(summary(gseGOBPs2))
View(summary(gseGOBP))
DESeq2::plotPCA(rld, intgroup = c("CellType", "Cells"))
DESeq2::plotPCA(rld_sen, intgroup = c("CellType", "Cells"))
plotMA(res_ouab, ylim = c(-10, 10)) # look at all genes
plotMA(res_ouab_sh, ylim = c(-10, 10))
dotplot(gseGOBP, showCategory=30, split=".sign") + facet_grid(.~.sign)
dotplot(gseGOBP, showCategory=50, split=".sign") + facet_grid(.~.sign)
dotplot(gseGOCC, showCategory=50, split=".sign") + facet_grid(.~.sign)
dotplot(gseGOMF, showCategory=50, split=".sign") + facet_grid(.~.sign)
dotplot(kk2, showCategory=50, split=".sign") + facet_grid(.~.sign)
dotplot(mkk2, showCategory=50, split=".sign") + facet_grid(.~.sign)
dotplot(reactr, showCategory=50, split=".sign") + facet_grid(.~.sign)
dotplot(gseWP, showCategory=50, split=".sign") + facet_grid(.~.sign)
dotplot(msigdbr, showCategory=50, split=".sign") + facet_grid(.~.sign)
emapplot(gseGOBPs)
emapplot(gseGOBP)
cnetplot(gseGOBP, #categorySize="pvalue",
foldChange=gene_list)
cnetplot(gseGOBP, foldChange=gene_list, circular = TRUE, colorEdge = TRUE)
ridgeplot(gseGOBP)
heatplot(gseGOBP, foldChange=gene_list)
plotGOgraph(gseGOBP)
View(summary(gseGOBP))
gseaplot(gseGOBPs, geneSetID = "GO:1904064", title = "positive regulation of cation transmembrane transport")
total <- as.data.frame(rld@rowRanges)
total2 <- total[,c(6,8,10)]
View(total2)
sub3 <- read.xlsx("uniprot_GO:1904064.xlsx", sheetIndex = 1)
str(sub3)
str(total2)
sub3$ENTREZID <- as.character(sub3$ENTREZID)
merged <- merge(total2,sub3,by="ENTREZID")
head(merged)
merged_ions <- merged$gene_id
res_ouab_shs_ions <- res_ouab_shs[merged_ions,]
View(as.data.frame(res_ouab_shs_ions))
mat  <- assay(rld)[ head(order(res_ouab_shs_ions$padj),14), ]
anno <- as.data.frame(colData(rld)[, c("Cells","CellType")])
pheatmap(mat,
annotation_col = anno,
scale = "row",
labels_row = rld_ions@rowRanges$GENENAME,
cluster_cols = F,
gaps_col = c(8,12),
show_colnames = FALSE,
main = "")
library(pheatmap)
pheatmap(mat,
annotation_col = anno,
scale = "row",
labels_row = rld_ions@rowRanges$GENENAME,
cluster_cols = F,
gaps_col = c(8,12),
show_colnames = FALSE,
main = "")
rld_ions <- rld[merged_ions,]
mat  <- assay(rld_ions)
anno <- as.data.frame(colData(rld_ions)[, c("Cells","CellType","OuabSeno")])
pheatmap(mat,
annotation_col = anno,
scale = "row",
labels_row = rld_ions@rowRanges$GENENAME,
cluster_cols = F,
gaps_col = c(8,12),
show_colnames = FALSE,
main = "")
save.image("~/mks/ouab_theme/step_2_salmon/ouab.RData")
